/*
* By Jose Aguinaga
* http://jjperezaguinaga.com
*/
@import url(https://fonts.googleapis.com/css?family=Pathway+Gothic+One);
$bg-color: #fff;

body {
  background: $bg-color;
  font-family: 'Pathway Gothic One', sans-serif;
}

// Buildings animations transitions
.animate {
  opacity: 1;

  &.hidden {
    opacity: 0;
  }
}


// Wrapper for buldings, with relative position, relative size and snimation
.buildings {
  position: absolute;
  left: 0;
  right: 0;
  width: 100vw;
  height: 100vw;
  z-index: -2;
  animation: rotate-right 300s linear 0s infinite;
  transform-origin: 49.5% 48.8%;

  // Buldings image
  .building {
    width: 8%;
    position: absolute;
    top: 21.7%;
    left: 49.4%;
    height: 27vw;
    transform-origin: bottom center;
    text-align: center;
    display: flex;
    justify-content: center;

    img {
      width: 100%;
      position: absolute;
      bottom: 100%;
    }

    span {
      font-size: 1.2vw;
    }
  }
}

// Positionate logo
.logo {
  position: absolute;
  left: 37.5vw;
  top: 41vw;
  width: 25vw;
  height: 27vw;
}

// Positionate main text
.main-message {
  font-size: 4vw;
  position: absolute;
  left: 38vw;
  top: 32vw;
}


@keyframes rotate-right {
  from { 
    -webkit-transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
  }
}

@keyframes rotate-left {
  from { 
    -webkit-transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(-360deg);
  }
}

@keyframes hover {
  0% {
    -webkit-transform: translateY(0%);  
  }
  50% {
    -webkit-transform: translateY(5%);  
  } 
  100% {
    -webkit-transform: translateY(0%);
  }     
}

@keyframes pull {
  0% {
    -webkit-transform: scaleY(1);
  }
  40% {
    -webkit-transform: scaleY(1.01);
  }
  60% {
    -webkit-transform: scaleY(0.99);
  }
  80% {
    -webkit-transform: scaleY(1.01);
  }
  100% {
    -webkit-transform: scaleY(0.99);
  }       
  80% {
    -webkit-transform: scaleY(1.01);
  }
  100% {
    -webkit-transform: scaleY(1);
  }   
}

@function getSpeed($speed, $type:turtle) {
  $secs: 360;
  $divider: 1;
  @if($type == turtle) {
    $divider: 1;
  } @else if($type == rabbit) {
    $divider: 10;
  } @else {
    $divider: 60;
  }
  @if $speed == fastest {
    $secs: calc(60 / $divider);
  } @else if $speed == really-fast {
    $secs: calc(120 / $divider);
  } @else if $speed == fast {
    $secs: calc(180 / $divider);
  } @else if $speed == slow {
    $secs: calc(240 / $divider);
  } @else if $speed == really-slow {
    $secs: calc(300 / $divider);
  } @else if $speed == slowest {
    $secs: calc(360 / $divider);
  }
  @return #{$secs}s;
}

@mixin _rotate-animation($direction, $speed, $type) {
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-animation: rotate-#{$direction} getSpeed($speed, $type) linear 0s infinite;
}

@mixin _hover-animation($duration, $delay) {
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-animation: hover #{$duration}s linear #{$delay}s infinite; 
}

@mixin _pull-animation($duration, $delay, $x: 200px, $y: 200px) {
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-transform-origin: $x $y;
  -webkit-animation: pull #{$duration}s linear #{$delay}s infinite alternate; 
}

@mixin rotate($type, $direction: left, $speed: slow, $x: 200px, $y: 200px) {
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-transform-origin: $x $y;
  @include _rotate-animation($direction, $speed, $type);
}

// Mote the planes over the buildings
#airplane1 {
  // @include rotate(turtle, right, fastest);
  animation: rotate-plane-1 30s linear infinite;
  -webkit-transform-origin: 200px 200px;
}

#airplane2 {
  // @include rotate(turtle, right, fastest);
  animation: rotate-plane-2 30s linear infinite;
  -webkit-transform-origin: 200px 200px;
}

#countryObjects {
  @include rotate(turtle, right, slow);
}

#floatingGlobe {
  @include rotate(turtle, left, normal);
}

#globe {
  $duration: 0;
  $delay: 0;
  @include _hover-animation($duration, $delay);
}

#windmill {
  @include rotate(flash, right, really-fast, 331px, 201px);
}

// Clouds
@for $i from 1 through 3 {
  #cloud#{$i} {
    @include _hover-animation(3, $i);
  }
}


// Inner Circles
@for $i from 1 through 5 {
  $direction: left;
  $speed: really-fast;
  #circle#{$i} {
    @if $i % 2 == 1 {
      $direction: right;
      $speed: really-fast;
    } @else {
      $direction: left;
      $speed: slow;
    }
    @include rotate(rabbit, $direction, $speed);
  }
}

// Overwrite animations {
@keyframes rotate-plane-1  {
  0% {
    -webkit-transform: rotate(0deg) translateY(35px);
  }
  100% {
      -webkit-transform: rotate(360deg) translateY(35px);
  }
}

@keyframes rotate-plane-2  {
  0% {
    -webkit-transform: rotate(0deg) translateY(-35px);
  }
  100% {
      -webkit-transform: rotate(360deg) translateY(-35px);
  }
}